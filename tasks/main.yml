# roles/httpd/tasks/main.yml
---

- include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags: httpd

- name: Ensure Apache is installed
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ httpd_packages }}"
  tags: httpd

- name: Install main configuration file
  template:
    src: httpd.conf.j2
    dest: "{{ httpd_config }}"
    owner: root
    group: root
    setype: httpd_config_t
    mode: '0644'
  notify: restart httpd
  tags: httpd

- name: Install status configuration file
  template:
    src: etc_httpd_conf.d_status.conf.j2
    dest: "{{ httpd_status_config }}"
    owner: root
    group: root
    setype: httpd_config_t
    mode: '0644'
  notify: restart httpd
  tags: httpd
  when: httpd_status_enable

- name: Install certificate files
  include_tasks: certificates.yml
  tags: httpd

- name: Install mod_ssl configuration file
  template:
    src: ssl.conf.j2
    dest: "{{ httpd_ssl_config }}"
    owner: root
    group: root
    setype: httpd_config_t
    mode: '0644'
  notify: restart httpd
  tags: httpd

- name: Open ports
  firewalld:
    service: "{{ item }}"
    permanent: yes
    state: enabled
  with_items:
    - 'http'
    - 'https'   
  notify: restart firewalld     

- name: Ensure Apache is always running
  service:
    name: httpd
    state: started
    enabled: true
  tags: httpd

- name: Mount directories
  file:
    path: '{{ item.mount }}'
    state: directory
  with_items:
    - '{{ repo_iso_mounts }}'

- name: Image directories
  file:
    path: '{{ repo_image_path }}'
    state: directory

- name: Download Image files
  get_url:
    url: "{{ item.url }}"
    dest: '{{ repo_image_path }}/{{ item.name }}'
  with_items: "{{ repo_qcow2_images }}"

- name: ISO directories
  file:
    path: '{{ repo_iso_path }}'
    state: directory

- name: Download ISO files
  get_url:
    url: "{{ item.iso_url }}"
    dest: '{{ repo_iso_path }}/{{ item.iso_name }}'
  with_items: "{{ repo_iso_mounts }}"

- name: ISO Mounts
  ansible.posix.mount:
    path: '{{ item.mount }}'
    src: '{{ repo_iso_path }}/{{ item.iso_name }}'
    fstype: iso9660
    opts: ro,loop
    state: present
  with_items: '{{ repo_iso_mounts }}' 

- name: SELinux context
  community.general.sefcontext:
    target: '/var/www/html(/.*)?'
    setype: httpd_sys_content_t 
    state: present

- name: Apply SELinux file context
  ansible.builtin.command: 
    argv:
      - restorecon 
      - -irv 
      - /var/www/html


